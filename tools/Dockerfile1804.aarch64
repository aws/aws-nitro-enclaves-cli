FROM ubuntu:18.04

SHELL ["/bin/bash", "-c"]

# Install dependencies to be able to use musl target to produce statically
# linked binaries.
RUN apt-get update && \
	apt-get install -y gcc \
	libssl-dev \
	pkg-config \
	musl-tools \
	ca-certificates \
	curl \
	gnupg2 \
	software-properties-common \
	llvm-dev \
	libclang-dev \
	clang \
	wget \
	unzip

# Install docker for nitro-cli build-enclave runs
RUN curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg > /tmp/dkey; apt-key add /tmp/dkey && \
    add-apt-repository \
        "deb [arch=arm64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") \
        $(lsb_release -cs) \
        stable" && \
    apt-get update && \
    apt-get -y install docker-ce

# Install rust toolchain and its dependencies
ENV RUST_VERSION=1.49.0
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUST_VERSION
RUN echo "source $HOME/.cargo/env" >> $HOME/.bashrc

# Build static version of Openssl.
ENV OPENSSL_VERSION=OpenSSL_1_1_1d
RUN mkdir /openssl_src
RUN wget https://github.com/openssl/openssl/archive/${OPENSSL_VERSION}.zip -P /openssl_src
RUN unzip /openssl_src/${OPENSSL_VERSION}.zip -d /openssl_src
RUN cd /openssl_src/openssl-${OPENSSL_VERSION} && CC=musl-gcc CFLAGS=-fPIC ./Configure --prefix=/musl_openssl --openssldir=/musl_openssl no-shared no-engine no-afalgeng linux-aarch64 -DOPENSSL_NO_SECURE_MEMORY \
	&& make \
	&& make install_sw \
	&& rm -rf /openssl_src

# Setup the right rust ver
RUN source $HOME/.cargo/env && \
    rustup target add aarch64-unknown-linux-musl --toolchain ${RUST_VERSION} && \
    cargo install cargo-audit --version 0.15.0 --locked

# Setup the env for nitro-cli
RUN mkdir -p /var/log/nitro_enclaves

RUN echo "Container build ready to go"
